<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator" kind="interface" language="C#" prot="public">
    <compoundname>UniformDataOperator::Sql::ISqlOperator</compoundname>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
    <derivedcompoundref refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator" prot="public" virt="non-virtual">UniformDataOperator.Sql.MySql.MySqlDataOperator</derivedcompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ab1b593e38cb9377dac847811c483f2f3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.Server</definition>
        <argsstring></argsstring>
        <name>Server</name>
        <briefdescription>
<para>An ip of a server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="37" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a2d0ac2538fa196b181f6e0ab523db137" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int UniformDataOperator.Sql.ISqlOperator.Port</definition>
        <argsstring></argsstring>
        <name>Port</name>
        <briefdescription>
<para>A port for access a binded server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="42" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a55b7f28ed4ab20f124e67e2d447f8b40" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.Database</definition>
        <argsstring></argsstring>
        <name>Database</name>
        <briefdescription>
<para>Name a target database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="47" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1abf0c3a32c8161030b37ccf960c395d4f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.UserId</definition>
        <argsstring></argsstring>
        <name>UserId</name>
        <briefdescription>
<para>A user for connection to a SQL server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="52" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a90f63ab37347ec080b37dc3256ead7a4" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="yes" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.Password</definition>
        <argsstring></argsstring>
        <name>Password</name>
        <briefdescription>
<para>A password for the user impersonation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="57" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="property" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a99f034a986828e96955e3187cdfb28da" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>DbConnection</type>
        <definition>DbConnection UniformDataOperator.Sql.ISqlOperator.Connection</definition>
        <argsstring></argsstring>
        <name>Connection</name>
        <briefdescription>
<para>A handler that manage connection between the app and a database. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="62" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="62" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a590fa080f8c35ebf5ee6ac535545e2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UniformDataOperator.Sql.ISqlOperator.Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a5aad834d2ceba598037b6ed19b27db6d">Initialize</reimplementedby>
        <briefdescription>
<para>Initializes an operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1afc0fd8b8c82515c498a6959453f331f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DbCommand</type>
        <definition>DbCommand UniformDataOperator.Sql.ISqlOperator.NewCommand</definition>
        <argsstring>()</argsstring>
        <name>NewCommand</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1af5850bfb38f7dfcd5acd5157458ef4bd">NewCommand</reimplementedby>
        <briefdescription>
<para>Returns a new clear command suitable for current DB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a10c43a3bfb6e8c88b692488c3341f297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DbCommand</type>
        <definition>DbCommand UniformDataOperator.Sql.ISqlOperator.NewCommand</definition>
        <argsstring>(string commandText)</argsstring>
        <name>NewCommand</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a6c2e2d374072c275953a515379963881">NewCommand</reimplementedby>
        <param>
          <type>string</type>
          <declname>commandText</declname>
        </param>
        <briefdescription>
<para>Returns a new clear command suitable for current DB with included command text. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac09f73e97974a4bd697046e0c54a93d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DbParameter</type>
        <definition>DbParameter UniformDataOperator.Sql.ISqlOperator.MemberToParameter</definition>
        <argsstring>(object data, ColumnAttribute column)</argsstring>
        <name>MemberToParameter</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a4f878911e378a4ece16d93f4c3352234">MemberToParameter</reimplementedby>
        <param>
          <type>object</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="d0/d68/class_uniform_data_operator_1_1_sql_1_1_markup_1_1_column_attribute" kindref="compound">ColumnAttribute</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Converts a value of a member to a database parameter that can be used in some command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A value of an object that will applied to the parameter.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>A column attribute relative to member of data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A parameter that could be used in commands to database. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a12d464e0532a3e194b1221eee0c32d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DbCommand</type>
        <definition>DbCommand UniformDataOperator.Sql.ISqlOperator.DisableSqlChecks</definition>
        <argsstring>(DbCommand command)</argsstring>
        <name>DisableSqlChecks</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1affbacb4fb1773fc14cdbb9cbcd315c5f">DisableSqlChecks</reimplementedby>
        <param>
          <type>DbCommand</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Adds some code that disabling SQL checks during executing a command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>A target command that would be modified during the operation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified comand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a0757f304a24ffaa743e23e8bdd210950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.DisableSqlChecks</definition>
        <argsstring>(string command)</argsstring>
        <name>DisableSqlChecks</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a3e80f9136c9fef46a443901a15f1e289">DisableSqlChecks</reimplementedby>
        <param>
          <type>string</type>
          <declname>command</declname>
        </param>
        <briefdescription>
<para>Adds some code that disabling SQL checks during executing a command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>A target command that will be modified during the operation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The modified comand. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a51af40df39808d53cdcc81852b836634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.DbTypeToString</definition>
        <argsstring>(DbType type)</argsstring>
        <name>DbTypeToString</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a7b854ebbcdf31c67716d8c365c321a31">DbTypeToString</reimplementedby>
        <param>
          <type>DbType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Trying to convert DBType to specified type in string format that suitable to this database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>A common DBType. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A type suitable for an SQL command relative to this type of database. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InvalidCastException</parametername>
</parameternamelist>
<parameterdescription>
<para>In case if converting not possible. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac8df6e071646a229acd4781c80d43b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.ValidateTableMember</definition>
        <argsstring>(TableAttribute tableDescriptor, MemberInfo columnMember)</argsstring>
        <name>ValidateTableMember</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a3c1a7ceec19175ba5bbce8109565be05">ValidateTableMember</reimplementedby>
        <param>
          <type><ref refid="d3/d61/class_uniform_data_operator_1_1_sql_1_1_markup_1_1_table_attribute" kindref="compound">TableAttribute</ref></type>
          <declname>tableDescriptor</declname>
        </param>
        <param>
          <type>MemberInfo</type>
          <declname>columnMember</declname>
        </param>
        <briefdescription>
<para>Validates a database table&apos;s column according to member attributes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableDescriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>A table metadata.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>columnMember</parametername>
</parameternamelist>
<parameterdescription>
<para>A member with defined ColumnAttribute attribute that will be compared with instantiated into the database. . </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of validation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a6fc9e5efd1e21ae9998b9c56ae9e347c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.OpenConnection</definition>
        <argsstring>(out string error)</argsstring>
        <name>OpenConnection</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1ae7ad4f4d29d927fa8551b087a6e596b5">OpenConnection</reimplementedby>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Opens new connection to a SQL server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>A faced error. Null if passed success.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of connection.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a1a6429996e1bbb452f4e034fd634e640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.CloseConnection</definition>
        <argsstring>()</argsstring>
        <name>CloseConnection</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1ae096306ef55611afbe96b0017f2032f6">CloseConnection</reimplementedby>
        <briefdescription>
<para>Closes an opened connection to a SQL server. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A result of connection closing.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a096be4f746c1fcbb8b2894c2517b937c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UniformDataOperator.Sql.ISqlOperator.Backup</definition>
        <argsstring>(string directory)</argsstring>
        <name>Backup</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a0dbd58206733a17dd26143b58d0859d7">Backup</reimplementedby>
        <param>
          <type>string</type>
          <declname>directory</declname>
        </param>
        <briefdescription>
<para>Backups a database to recovery container. The name will be generated by a timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directory</parametername>
</parameternamelist>
<parameterdescription>
<para>A directory that will contains the backup file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1acf6fdbfc57a21efc371e0772244defd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UniformDataOperator.Sql.ISqlOperator.Restore</definition>
        <argsstring>(string filePath)</argsstring>
        <name>Restore</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a22a9e92989ebdb3a52b8ebe409c59831">Restore</reimplementedby>
        <param>
          <type>string</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Restores a SQL database from a recovery container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>A full path to the file.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a5ae8328a464ef80f1ae1bd46a573c265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.ActivateSchema</definition>
        <argsstring>(string schemaName, out string error)</argsstring>
        <name>ActivateSchema</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a2ed7d06bc016ae6d07cbcceffc21bbd3">ActivateSchema</reimplementedby>
        <param>
          <type>string</type>
          <declname>schemaName</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Adds a schema if not exist. Sets the schema as current one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>schemaName</parametername>
</parameternamelist>
<parameterdescription>
<para>A name of the schema that will be used.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the opertion.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1aac9c3ed1e73af66e383340a154786ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string UniformDataOperator.Sql.ISqlOperator.ColumnDeclarationCommand</definition>
        <argsstring>(MemberInfo member)</argsstring>
        <name>ColumnDeclarationCommand</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a0bdc2943e5d10576fb564913cdd744e7">ColumnDeclarationCommand</reimplementedby>
        <param>
          <type>MemberInfo</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Returns generated SQL command that declares the column into the table. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>A member with defined attributes that describe a column.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A SQL command relative to target server.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ad05106eb6bd1a50f35b476a42821dfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToTable</definition>
        <argsstring>(Type tableType, object data, out string error)</argsstring>
        <name>SetToTable</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a5a12c84883a7e4945b4fb3787a39b302">SetToTable</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>data</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates and handles a command that send a data from object to a database on a SQL server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>An object that contains fields/properties which values that will be written to a database. Affected only fields and properties with defined ColumnAttribute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a35ef3899954f213e391751e9cda09322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToTableAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object data)</argsstring>
        <name>SetToTableAsync</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a036b234868363f2f680e5157ee459439">SetToTableAsync</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Creates and handles an asynchronous command that send a data from object to a database on a SQL server. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>An object that contains fields/properties which values that will be written to a database. Affected only fields and properties with defined ColumnAttribute. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a9a1822fcafcb1a3abd59b40f2cef7930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObject</definition>
        <argsstring>(Type tableType, object obj, out string error, string[] select, params string[] where)</argsstring>
        <name>SetToObject</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a8f44635dc337c3652041f079190a792d">SetToObject</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>string []</type>
          <declname>select</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during a query generation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>WHERE</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a5d151cd156c1ced0e9fe09be866adae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObject</definition>
        <argsstring>(Type tableType, object obj, out string error, params string[] select)</argsstring>
        <name>SetToObject</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1af763205fa1d8a8ad83afc672d5743d65">SetToObject</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>select</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type that has defined Table attribute. Would be used as table descriptor during query building.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Target object that cantains described primary keys, that would be used during query generation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac170526dd0fa31f2848ece5f5c5bb9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObject</definition>
        <argsstring>(Type tableType, object obj, out string error)</argsstring>
        <name>SetToObject</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a5da5cc531c8c953f73e7fc50513790e9">SetToObject</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Target object that cantains described primary keys, that would be used during query generation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of the operation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ae5c6fb9c7448e7171414b7d20095cc08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObjects</definition>
        <argsstring>(Type tableType, object obj, out IList collection, out string error, string[] select, params string[] where)</argsstring>
        <name>SetToObjects</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a38d9367d43538c2afc77331fe18ab666">SetToObjects</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out IList</type>
          <declname>collection</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>string []</type>
          <declname>select</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collection</parametername>
</parameternamelist>
<parameterdescription>
<para>An output collection that will contains the received objects with a same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>WHERE</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of operation. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac75ce5e3b29a8d2d94f96d4a9ff47820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObjects</definition>
        <argsstring>(Type tableType, object obj, out IList collection, out string error, params string[] select)</argsstring>
        <name>SetToObjects</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a26b72128803de85e9c44ac6deecc78c4">SetToObjects</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out IList</type>
          <declname>collection</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>select</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collection</parametername>
</parameternamelist>
<parameterdescription>
<para>An output collection that will contains the received objects with a same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of operation. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a6bde25bff76c7b2105aa4e14740eb07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UniformDataOperator.Sql.ISqlOperator.SetToObjects</definition>
        <argsstring>(Type tableType, object obj, out IList collection, out string error)</argsstring>
        <name>SetToObjects</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a4079de461f0a37c0b69754a0e93dc05b">SetToObjects</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>out IList</type>
          <declname>collection</declname>
        </param>
        <param>
          <type>out string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. Selects all the fields described into the table. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collection</parametername>
</parameternamelist>
<parameterdescription>
<para>An output collection that will contains the received objects with a same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>An error faced during the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A result of operation. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a16e1513f43f3b9d76c687ba3b026573d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj, string[] select, params string[] where)</argsstring>
        <name>SetToObjectAsync</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a98b579ed4a87c3f9dbdb90ffc28bf15c">SetToObjectAsync</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>string []</type>
          <declname>select</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during a query generation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>WHERE</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a3a973b49f190dabe6bcd0bf3e79b3c5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj, params string[] select)</argsstring>
        <name>SetToObjectAsync</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a49ee22a2a69fbc0752c989c7b79e5e43">SetToObjectAsync</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>select</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during a query generation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a497325acf359d4f8444ee0c2ff858e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj)</argsstring>
        <name>SetToObjectAsync</name>
        <reimplementedby refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator_1a3be9aeb9ce11e3fd536449843a585490">SetToObjectAsync</reimplementedby>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an object by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Selects all the fields described into the table. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during a query generation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a396bf6c6d962ba910367755ad13d3d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectsAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj, Action&lt; IList &gt; callback, string[] select, params string[] where)</argsstring>
        <name>SetToObjectsAsync</name>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Action&lt; IList &gt;</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>string []</type>
          <declname>select</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate that will handle received objects collection. The collection has the same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>WHERE</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a277f97eaff18d7966e9b7ce00c171a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectsAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj, Action&lt; IList &gt; callback, params string[] select)</argsstring>
        <name>SetToObjectsAsync</name>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Action&lt; IList &gt;</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>params string []</type>
          <declname>select</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate that will handle received objects collection. The collection has the same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>select</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of requested columns that will included to the <computeroutput>SELECT</computeroutput> part of an SQL query.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac8deb4d7a21d382b352b401f714deea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task UniformDataOperator.Sql.ISqlOperator.SetToObjectsAsync</definition>
        <argsstring>(Type tableType, CancellationToken cancellationToken, object obj, Action&lt; IList &gt; callback)</argsstring>
        <name>SetToObjectsAsync</name>
        <param>
          <type>Type</type>
          <declname>tableType</declname>
        </param>
        <param>
          <type>CancellationToken</type>
          <declname>cancellationToken</declname>
        </param>
        <param>
          <type>object</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>Action&lt; IList &gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Asynchronously sets a data from a DbDataReader to an objects list by using a columns map described at the object&apos;s Type. Builds an handles an SQL query for request of columns data relative to primary keys described in the object. Can receive the objects with count starts at one. Selects all the fields described into the table. Looks for the data by primary keys values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableType</parametername>
</parameternamelist>
<parameterdescription>
<para>A type that has defined TableAttribute. Will be used as a table descriptor during the query building. Defines a behavior by attributes defined to the members. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cancellationToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A token that can be used to terminate the operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A target object that cantains described primary keys, that will be used during an SQL query generation. After operation would contains a recived object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A delegate that will handle received objects collection. The collection has the same Type as the source <computeroutput>obj</computeroutput> instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A started task. Invokes <ref refid="dc/dce/class_uniform_data_operator_1_1_sql_1_1_sql_operator_handler_1a8373486df36ace17ffba1e14bf6a951a" kindref="member">SqlOperatorHandler.SqlErrorOccured</ref> in case if data not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="505" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implement that interface to provide possibility to control your database by unified commands. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="52">
        <label>UniformDataOperator.Sql.MySql.MySqlDataOperator</label>
        <link refid="d5/d34/class_uniform_data_operator_1_1_sql_1_1_my_sql_1_1_my_sql_data_operator"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>UniformDataOperator.Sql.ISqlOperator</label>
        <link refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator"/>
      </node>
    </inheritancegraph>
    <location file="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" line="32" column="1" bodyfile="D:/Work/GitHub/uniform-data-operator/SQL/ISQLOperator.cs" bodystart="31" bodyend="511"/>
    <listofallmembers>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a5ae8328a464ef80f1ae1bd46a573c265" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>ActivateSchema</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a096be4f746c1fcbb8b2894c2517b937c" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Backup</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a1a6429996e1bbb452f4e034fd634e640" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>CloseConnection</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1aac9c3ed1e73af66e383340a154786ec7" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>ColumnDeclarationCommand</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a99f034a986828e96955e3187cdfb28da" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Connection</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a55b7f28ed4ab20f124e67e2d447f8b40" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Database</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a51af40df39808d53cdcc81852b836634" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>DbTypeToString</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a12d464e0532a3e194b1221eee0c32d34" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>DisableSqlChecks</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a0757f304a24ffaa743e23e8bdd210950" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>DisableSqlChecks</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a590fa080f8c35ebf5ee6ac535545e2a8" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Initialize</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac09f73e97974a4bd697046e0c54a93d3" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>MemberToParameter</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1afc0fd8b8c82515c498a6959453f331f1" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>NewCommand</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a10c43a3bfb6e8c88b692488c3341f297" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>NewCommand</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a6fc9e5efd1e21ae9998b9c56ae9e347c" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>OpenConnection</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a90f63ab37347ec080b37dc3256ead7a4" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Password</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a2d0ac2538fa196b181f6e0ab523db137" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Port</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1acf6fdbfc57a21efc371e0772244defd5" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Restore</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ab1b593e38cb9377dac847811c483f2f3" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>Server</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a9a1822fcafcb1a3abd59b40f2cef7930" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObject</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a5d151cd156c1ced0e9fe09be866adae7" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObject</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac170526dd0fa31f2848ece5f5c5bb9d7" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObject</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a16e1513f43f3b9d76c687ba3b026573d" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a3a973b49f190dabe6bcd0bf3e79b3c5e" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a497325acf359d4f8444ee0c2ff858e6e" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ae5c6fb9c7448e7171414b7d20095cc08" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjects</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac75ce5e3b29a8d2d94f96d4a9ff47820" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjects</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a6bde25bff76c7b2105aa4e14740eb07d" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjects</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a396bf6c6d962ba910367755ad13d3d3c" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectsAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a277f97eaff18d7966e9b7ce00c171a0a" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectsAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac8deb4d7a21d382b352b401f714deea9" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToObjectsAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ad05106eb6bd1a50f35b476a42821dfa3" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToTable</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1a35ef3899954f213e391751e9cda09322" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>SetToTableAsync</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1abf0c3a32c8161030b37ccf960c395d4f" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>UserId</name></member>
      <member refid="d1/dad/interface_uniform_data_operator_1_1_sql_1_1_i_sql_operator_1ac8df6e071646a229acd4781c80d43b68" prot="public" virt="non-virtual"><scope>UniformDataOperator::Sql::ISqlOperator</scope><name>ValidateTableMember</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
